

box: python:2.7

# services:
#     - id: google/cloud-sdk
#       tag: latest
#       cmd: gcloud beta emulators datastore start

build:
  steps:
    - virtualenv:
        name: setup virtual environment
        install_wheel: false

    - pip-install

    - script:
        name: echo python information
        code: |
          echo "python version $(python --version) running"
          echo "pip version $(pip --version) running"

    - script:
        name: create ens-rss-rc.yml
        code: ./create_ens-rss-rc.yml.sh

    - script:
        name: copy to deploy location
        code: cp ens-rss-rc.yml "$WERCKER_OUTPUT_DIR"

deploy:
  box: google/cloud-sdk
  steps:
  - script:
      name: install jq
      code: wget -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && chmod a+x /usr/local/bin/jq

  - script:
      name: gcr.io authentication
      code: |
        echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
        gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
        gcloud config set project $GCLOUD_PROJECT
        gcloud docker --authorize-only
        export GCR_AUTH_TOKEN=$(cat $HOME/.dockercfg | jq --raw-output '.["https://eu.gcr.io"].auth' | base64 --decode | cut -d ':' -f2)

  - internal/docker-push:
      username: _token
      password: $GCR_AUTH_TOKEN
      repository: eu.gcr.io/eve-notifications/en-rss
      registry: https://eu.gcr.io

  initialize:
  - script:
      name: install jq
      code: wget -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && chmod a+x /usr/local/bin/jq

  - script:
      name: gcr.io authentication
      code: |
        echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
        gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
        gcloud config set project $GCLOUD_PROJECT

  - kubectl:
      command: create -f ens-rss-rc.yml
